@use "@rempi-ui/core/src/config/rempi-variables" as rempiVars;

@keyframes enterFromRight {
  from {
    opacity: 0;
    transform: translateX(200px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes enterFromLeft {
  from {
    opacity: 0;
    transform: translateX(-200px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes exitToRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }

  to {
    opacity: 0;
    transform: translateX(200px);
  }
}

@keyframes exitToLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }

  to {
    opacity: 0;
    transform: translateX(-200px);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: rotateX(-30deg) scale(0.9);
  }

  to {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }

  to {
    opacity: 0;
    transform: rotateX(-10deg) scale(0.95);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

.rempi-navigation-menu {
  &__root {
    display: flex;
    justify-content: center;
    position: relative;
    z-index: 1;
    width: 100%;
  }

  &__list {
    display: flex;
    justify-content: center;
    list-style: none;
    margin: 0;
    padding: rempiVars.$spaces-1;
  }

  &__trigger,
  &__link {
    border-radius: rempiVars.$radiis-1;
    color: rempiVars.$colors-grey-11;
    font-size: rempiVars.$font-sizes-4;
    font-weight: rempiVars.$font-weights-3;
    line-height: rempiVars.$line-heights-1;
    outline: none;
    padding: rempiVars.$spaces-2 rempiVars.$spaces-3;
    user-select: none;

    &:focus-visible,
    &:focus {
      outline-color: rempiVars.$colors-info-9;
      outline-style: solid;
      outline-width: rempiVars.$border-widths-1;
    }

    &:hover:not([data-disabled]) {
      background-color: rempiVars.$colors-primary-3;
    }

    &[data-active] {
      background-color: rempiVars.$colors-primary-2;
      color: rempiVars.$colors-primary-12;
    }

  }

  &__trigger {
    align-items: center;
    display: flex;
    gap: rempiVars.$spaces-2;
    justify-content: space-between;

    &__chevron-down {
      position: relative;
      color: rempiVars.$colors-grey-10;
      top: 1px;
      transition: transform 250ms ease;
    }

    &[data-state="open"] {
      background-color: rempiVars.$colors-primary-3;

      .rempi-navigation-menu__trigger__chevron-down {
        transform: rotate(-180deg);
      }
    }

    &[data-disabled],
    &[data-disabled] * {
      cursor: not-allowed;
      color: rempiVars.$colors-grey-8;
    }
  }

  &__link {
    display: block;
    text-decoration: none;
    font-weight: rempiVars.$font-weights-3;
    line-height: rempiVars.$line-heights-1;
  }

  &__content {
    animation-duration: 250ms;
    animation-timing-function: ease;
    transition: width, height, 300ms ease;
    width: auto;

    &[data-motion="from-start"] {
      animation-name: enterFromLeft;
    }

    &[data-motion="from-end"] {
      animation-name: enterFromRight;
    }

    &[data-motion="to-start"] {
      animation-name: exitToLeft;
    }

    &[data-motion="to-end"] {
      animation-name: exitToRight;
    }
  }

  &__viewport {
    background-color: rempiVars.$colors-grey-2;
    border: rempiVars.$border-widths-1 solid rempiVars.$colors-grey-6;
    border-radius: rempiVars.$radiis-2;
    box-shadow: rempiVars.$shadows-1;
    overflow: hidden;
    height: var(--radix-navigation-menu-viewport-height);
    position: relative;
    transition: width, height, 250ms ease;
    width: 100%;

    &-position {
      display: flex;
      justify-content: center;
      overflow: hidden;
      position: absolute;
      top: 100%;
    }

    &[data-state="open"] {
      animation: scaleIn 200ms ease;
    }

    &[data-state="closed"] {
      animation: scaleOut 200ms ease;
    }
  }
}